package ch.eawag.chemeql;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;


class PHConstDialog extends ProceedCancelDialog
{
	private static PHConstDialog INSTANCE;
	static PHConstDialog getInstance(ChemEQL3 parent)
	{
		if (INSTANCE == null)
			INSTANCE = new PHConstDialog(parent);
		return INSTANCE;
	}

	private double currentPHInput;

	// Constructor for creating a bean
	public PHConstDialog()
	{
		initComponents();
	}
	
	private PHConstDialog(ChemEQL3 m)
	{
		super(m);
		initComponents();
		setLocation(300,250);
		addComponentListener(new ComponentAdapter() {
			@Override
			public void componentShown(ComponentEvent ev)
			{
				pHTF.setText(MyTools.EXACT_3_DIGITS.format(
					-MyTools.myLog(main.matrix.getMultiConcForLast())));
				pHTF.selectAll();
			}
		});
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
   private void initComponents()//GEN-BEGIN:initComponents
   {
      javax.swing.JLabel label;

      label = new javax.swing.JLabel();
      pHTF = new KeyListeningTextField()
      {
         void keyPressedActivity()
         {
            pHValueChanged();
         }
      };

      getControls().setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 6, 0));

      setTitle("Change pH");
      label.setText("pH value:");
      getControls().add(label);

      pHTF.setColumns(5);
      getControls().add(pHTF);

      pack();
   }//GEN-END:initComponents
	
	private void pHValueChanged()
	{
		try
		{
			currentPHInput =
				Double.parseDouble(pHTF.getText());
			proceedButton.setEnabled(true);
		}
		catch (NumberFormatException ex)
		{
			currentPHInput = Double.NaN;
			proceedButton.setEnabled(false);
		}
	}
	
	protected void doCancel()
	{
		main.pHrangeStart = MyTools.myLog(main.matrix.getMultiConcForLast()); /*restore old value*/
		main.pHrangeEnd = main.pHrangeStart;
		main.pHrangeStep = main.pHrangeStart;
		main.pHrangeCmd.setEnabled(true);
		main.formatMenu.setEnabled(true);
		main.fileInfoWindow.update();
		super.doCancel();
	}
	
	protected void doProceed()
	{
		main.pHrangeStart = currentPHInput;
		main.pHrangeEnd = main.pHrangeStart;
		main.pHrangeStep = main.pHrangeStart;
		int lastIdx = main.matrix.totComp-1;
		main.matrix.concEstim[lastIdx] = -main.pHrangeStart;
		main.matrix.multiConcMatrix[0][lastIdx] = MyTools.expo(10,-main.pHrangeStart);
		if (!main.adsRange) {
			main.outputFormat = OutputFormat.REGULAR;
		}
		main.pHfix = true;
		main.pHrange = true;
		main.pHrangeCmd.setEnabled(false);
		main.formatMenu.setEnabled(false);
		main.fileInfoWindow.update();
		super.doProceed();
	}
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JTextField pHTF;
   // End of variables declaration//GEN-END:variables
}