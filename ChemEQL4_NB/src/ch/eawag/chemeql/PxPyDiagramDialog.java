package ch.eawag.chemeql;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;


public class PxPyDiagramDialog extends ProceedCancelDialog implements ItemListener
{
	private static PxPyDiagramDialog INSTANCE;

	static PxPyDiagramDialog getInstance(ChemEqlGuiController parent) {
		if (INSTANCE == null) {
			INSTANCE = new PxPyDiagramDialog(parent);
		}
		return INSTANCE;
	}

	private double currentpXStart;
	private double currentpXEnd;
	private double currentpYStart;
	private double currentpYEnd;
	private double currentpXpYstep;
	private int currentpXpYspecs;

	// Constructor for creating a bean
	public PxPyDiagramDialog() {
		initComponents();
	}

	private PxPyDiagramDialog(ChemEqlGuiController parent) {
		super(parent);
		initComponents();
		setLocation(300, 250);
		addComponentListener(new ComponentAdapter()
		{
			@Override
			public void componentShown(ComponentEvent ev) {
				currentpXpYstep = 0.2;
				pXpYstepTF.setText("0.20");
				pXpYspecsTF.setText("");
				pXStartTF.setText("");
				pXEndTF.setText("");
				pYStartTF.setText("");
				pYEndTF.setText("");

				proceedButton.setEnabled(false);
				xCompCB.setModel(main.matrix.createComponentsCBModel());
				xCompCB.setSelectedIndex(main.matrix.totComp - 1);	/*Horizontal: Letzte Komponente (meist H+)*/

				yCompCB.setModel(main.matrix.createComponentsCBModel());
				yCompCB.setSelectedIndex(main.matrix.totComp - 2);	/*Vertikal: Zweitletzte Komponente (meist e-)*/

				mainpXpYcompCB.setModel(main.matrix.createComponentsCBModel());
				mainpXpYcompCB.setSelectedIndex(0);						/*Vorschlag: Erste Komponente*/

			}
		});
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
   private void initComponents()//GEN-BEGIN:initComponents
   {
      java.awt.GridBagConstraints gridBagConstraints;
      javax.swing.JLabel pXEndLabel;
      javax.swing.JLabel pXStartLabel;
      javax.swing.JLabel pXpYmainLabel;
      javax.swing.JLabel pXpYspecsLabel;
      javax.swing.JLabel pXpYstepLabel;
      javax.swing.JLabel pYEndLabel;
      javax.swing.JLabel pyStartLabel;

      xPanel = new javax.swing.JPanel();
      xCompCB = new javax.swing.JComboBox();
      pXStartLabel = new javax.swing.JLabel();
      pXStartTF = new KeyListeningTextField()
      {
         void keyPressedActivity()
         {
            checkInputs();
         }
      };

      pXEndLabel = new javax.swing.JLabel();
      pXEndTF = new KeyListeningTextField()
      {
         void keyPressedActivity()
         {
            checkInputs();
         }
      };

      yPanel = new javax.swing.JPanel();
      yCompCB = new javax.swing.JComboBox();
      pyStartLabel = new javax.swing.JLabel();
      pYStartTF = new KeyListeningTextField()
      {
         void keyPressedActivity()
         {
            checkInputs();
         }
      };

      pYEndLabel = new javax.swing.JLabel();
      pYEndTF = new KeyListeningTextField()
      {
         void keyPressedActivity()
         {
            checkInputs();
         }
      };

      pXpYmainLabel = new javax.swing.JLabel();
      mainpXpYcompCB = new javax.swing.JComboBox();
      pXpYspecsLabel = new javax.swing.JLabel();
      pXpYspecsTF = new KeyListeningTextField()
      {
         void keyPressedActivity()
         {
            checkInputs();
         }
      };

      pXpYstepLabel = new javax.swing.JLabel();
      pXpYstepTF = new KeyListeningTextField()
      {
         void keyPressedActivity()
         {
            checkInputs();
         }
      };

      setTitle("pX-pY Diagram");
      xPanel.setLayout(new java.awt.GridBagLayout());

      xPanel.setBorder(new javax.swing.border.TitledBorder(null, "X-component", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 0;
      gridBagConstraints.gridwidth = 3;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
      xPanel.add(xCompCB, gridBagConstraints);

      pXStartLabel.setText("-log range from:");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 4);
      xPanel.add(pXStartLabel, gridBagConstraints);

      pXStartTF.setColumns(5);
      pXStartTF.setMinimumSize(new java.awt.Dimension(59, 20));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.weightx = 1.0;
      xPanel.add(pXStartTF, gridBagConstraints);

      pXEndLabel.setText("to:");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 2;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 4);
      xPanel.add(pXEndLabel, gridBagConstraints);

      pXEndTF.setColumns(5);
      pXEndTF.setMinimumSize(new java.awt.Dimension(59, 20));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 3;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.weightx = 1.0;
      xPanel.add(pXEndTF, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 0;
      gridBagConstraints.gridwidth = 3;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(0, 0, 8, 0);
      getControls().add(xPanel, gridBagConstraints);

      yPanel.setLayout(new java.awt.GridBagLayout());

      yPanel.setBorder(new javax.swing.border.TitledBorder(null, "Y-component", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 0;
      gridBagConstraints.gridwidth = 3;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
      yPanel.add(yCompCB, gridBagConstraints);

      pyStartLabel.setText("-log range from:");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 4);
      yPanel.add(pyStartLabel, gridBagConstraints);

      pYStartTF.setColumns(5);
      pYStartTF.setMinimumSize(new java.awt.Dimension(59, 20));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.weightx = 1.0;
      yPanel.add(pYStartTF, gridBagConstraints);

      pYEndLabel.setText("to:");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 2;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 4);
      yPanel.add(pYEndLabel, gridBagConstraints);

      pYEndTF.setColumns(5);
      pYEndTF.setMinimumSize(new java.awt.Dimension(59, 20));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 3;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.weightx = 1.0;
      yPanel.add(pYEndTF, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.gridwidth = 3;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(0, 0, 8, 0);
      getControls().add(yPanel, gridBagConstraints);

      pXpYmainLabel.setText("plot species:");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
      getControls().add(pXpYmainLabel, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 8);
      getControls().add(mainpXpYcompCB, gridBagConstraints);

      pXpYspecsLabel.setText("include species from 1 to:");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(0, 6, 6, 4);
      getControls().add(pXpYspecsLabel, gridBagConstraints);

      pXpYspecsTF.setColumns(4);
      pXpYspecsTF.setMinimumSize(new java.awt.Dimension(48, 20));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 2;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
      getControls().add(pXpYspecsTF, gridBagConstraints);

      pXpYstepLabel.setText("step size:");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 4;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
      getControls().add(pXpYstepLabel, gridBagConstraints);

      pXpYstepTF.setColumns(4);
      pXpYstepTF.setMinimumSize(new java.awt.Dimension(48, 20));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 2;
      gridBagConstraints.gridy = 4;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      getControls().add(pXpYstepTF, gridBagConstraints);

      pack();
   }//GEN-END:initComponents

	public void itemStateChanged(ItemEvent e) {
		proceedButton.setEnabled(true);
	}

	private void checkInputs() {
		try {
			currentpXStart = Double.parseDouble(pXStartTF.getText());
			currentpXEnd = Double.parseDouble(pXEndTF.getText());
			currentpYStart = Double.parseDouble(pYStartTF.getText());
			currentpYEnd = Double.parseDouble(pYEndTF.getText());
			currentpXpYstep = Double.parseDouble(pXpYstepTF.getText());
			currentpXpYspecs = Integer.parseInt(pXpYspecsTF.getText());
			proceedButton.setEnabled(true);
		} catch (NumberFormatException ex) {
			proceedButton.setEnabled(false);
		}
	}

	protected void doCancel() {
		/*cancel*/
		main.dopXpYdiagram = false;
		main.doDrawGraph = false;
		main.graphMI.setDisable(true);
		main.outputFormat = OutputFormat.REGULAR;
		super.doCancel();
	}

	protected void doProceed() {
		if (currentpXStart >= currentpXEnd || currentpYStart >= currentpYEnd) {
			MyTools.showError("Start values must be smaller than end values!");
		}
		else if (xCompCB.getSelectedIndex() == yCompCB.getSelectedIndex()) {
			MyTools.showError("X component and Y component are identical!");
		}
		else if (currentpXpYspecs < 2 || currentpXpYspecs > main.matrix.totSpec - 2) {
			MyTools.showError("Number of species is not sensible!");
		}
		else {
			main.dopXpYdiagram = true;
			main.doDrawGraph = true;
			/** * GRAPHIC ACTIVE ** */
			main.graphMI.setDisable(true);		/*deactivate graphics*/

			main.outputFormat = OutputFormat.PXPY_DIAGRAM;

			main.matrix.xComp = xCompCB.getSelectedIndex();
			main.matrix.yComp = yCompCB.getSelectedIndex();
			main.matrix.mainpXpYcomp = mainpXpYcompCB.getSelectedIndex();
			main.matrix.pXrangeStart = currentpXStart;
			main.matrix.pXrangeEnd = currentpXEnd;
			main.matrix.pYrangeStart = currentpYStart;
			main.matrix.pYrangeEnd = currentpYEnd;
			main.matrix.pXpYstep = currentpXpYstep;
			main.matrix.pXpYspecs = currentpXpYspecs;
			super.doProceed();
		}
	}
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JComboBox mainpXpYcompCB;
   private javax.swing.JTextField pXEndTF;
   private javax.swing.JTextField pXStartTF;
   private javax.swing.JTextField pXpYspecsTF;
   private javax.swing.JTextField pXpYstepTF;
   private javax.swing.JTextField pYEndTF;
   private javax.swing.JTextField pYStartTF;
   private javax.swing.JComboBox xCompCB;
   private javax.swing.JPanel xPanel;
   private javax.swing.JComboBox yCompCB;
   private javax.swing.JPanel yPanel;
   // End of variables declaration//GEN-END:variables
}
