annotation.processing.enabled=false
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.desc=ChemEQL calculates and draws thermodynamic equilibrium concentrations of species in complex chemical systems. It handles homogeneous solutions, dissolution, precipitation, titrations with acids, bases, or other components. Adsorption on up to five different particulate surfaces can be modeled with the choice of the Constant Capacitance, Diffuse Layer (Generalized Two Layer), Basic Stern Layer, or Triple Layer model to consider surface charges. Corrections for ionic strength can be made and activities calculated. Kinetic reactions can be simulated with one rate determining process in a system of otherwise fast thermodynamic chemical equilibrium. Two-dimensional logarithmic diagrams, such as pe-pH, or generally pX vs. pY, can be calculated. A drawing option is implemented.\n\nA library with over 1750 thermodynamic stability constants allows quick access, comfortable creation of input matrices and hence easy use of the program. A second library contains more than 300 solubility products hat can be introduced if solid phases are modeled. Both libraries can be altered and extended with new reactions and stability constants. Output data are formatted for .xls or for import in a graphic program.\n\nChemEQL 4 is currently under development. It is based on Java 8 / JavaFX and builds on its predeccessor ChemEQL 3 being a Java port of a native Mac OS 9 application that in turn was an extended and user-friendly version of the original program MICROQL by John Westall. ChemEQL 4 is open source.
application.homepage=http://www.eawag.ch/research_e/surf/Researchgroups/sensors_and_analytic/chemeql.html
application.splash=/Users/kaibrassel/Documents/Projekte/ChemEQL/ChemEQL4_NB/startup.gif
application.title=ChemEQL
application.vendor=Beat M\u00fcller, www.eawag.ch
auxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
compile.on.save=true
compile.on.save.unsupported.javafx=true
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/ChemEQL4_NB.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
includes=**
# Non-JavaFX jar file creation is deactivated in JavaFX 2.0+ projects
jar.archive.disabled=true
jar.compress=false
javac.classpath=\
    ${javafx.classpath.extension}:\
    ${libs.ControlsFX.classpath}:\
    ${libs.FontAwsome.classpath}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=true
javac.processorpath=\
    ${javac.classpath}
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
javafx.application.implementation.version=4.0
javafx.binarycss=false
javafx.classpath.extension=\
    ${java.home}/lib/javaws.jar:\
    ${java.home}/lib/deploy.jar:\
    ${java.home}/lib/plugin.jar
javafx.deploy.adddesktopshortcut=true
javafx.deploy.addstartmenushortcut=false
javafx.deploy.allowoffline=true
# If true, application update mode is set to 'background', if false, update mode is set to 'eager'
javafx.deploy.backgroundupdate=false
javafx.deploy.disable.proxy=false
javafx.deploy.embedJNLP=true
javafx.deploy.icon=icon.jpg
javafx.deploy.icon.native=icon.jpg
javafx.deploy.includeDT=true
javafx.deploy.installpermanently=true
javafx.deploy.permissionselevated=false
javafx.deploy.request.runtime=8.0+
javafx.deploy.splash=startup.gif
# Set true to prevent creation of temporary copy of deployment artifacts before each run (disables concurrent runs)
javafx.disable.concurrent.runs=false
# Set true to enable multiple concurrent runs of the same WebStart or Run-in-Browser project
javafx.enable.concurrent.external.runs=false
# This is a JavaFX project
javafx.enabled=true
javafx.fallback.class=com.javafx.main.NoJavaFXFallback
# Main class for JavaFX
javafx.main.class=ch.eawag.chemeql.ChemEql
javafx.preloader.class=
# This project does not use Preloader
javafx.preloader.enabled=false
javafx.preloader.jar.filename=
javafx.preloader.jar.path=
javafx.preloader.project.path=
javafx.preloader.type=none
# Set true for GlassFish only. Rebases manifest classpaths of JARs in lib dir. Not usable with signed JARs.
javafx.rebase.libs=false
javafx.run.height=600
javafx.run.width=800
javafx.signing.blob=false
javafx.signing.enabled=false
javafx.signing.type=self
# Pre-JavaFX 2.0 WebStart is deactivated in JavaFX 2.0+ projects
jnlp.enabled=false
# Main class for Java launcher
main.class=com.javafx.main.Main
# For improved security specify narrower Codebase manifest attribute to prevent RIAs from being repurposed
manifest.custom.codebase=*
# Specify Permissions manifest attribute to override default (choices: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
native.bundling.enabled=true
platform.active=default_platform
project.license=mit
project.licensePath=./nbproject/licenseheader.txt
run.classpath=\
    ${javac.classpath}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
